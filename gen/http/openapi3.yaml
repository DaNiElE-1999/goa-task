openapi: 3.0.3
info:
    title: Books Service
    description: CRUD Application for books
    version: "1.0"
servers:
    - url: http://localhost:8000
paths:
    /books:
        get:
            tags:
                - books
            summary: all books
            operationId: books#all
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/CreateRequestBody'
                                example:
                                    - ID: 7132541697137308667
                                      author: Dolor qui ut et quo est omnis.
                                      bookCover: Asperiores illo at nesciunt.
                                      publishedAt: Mollitia eos consequuntur tempore et.
                                      title: Explicabo impedit nesciunt quisquam aut eligendi repudiandae.
                                    - ID: 7132541697137308667
                                      author: Dolor qui ut et quo est omnis.
                                      bookCover: Asperiores illo at nesciunt.
                                      publishedAt: Mollitia eos consequuntur tempore et.
                                      title: Explicabo impedit nesciunt quisquam aut eligendi repudiandae.
                            example:
                                - ID: 7132541697137308667
                                  author: Dolor qui ut et quo est omnis.
                                  bookCover: Asperiores illo at nesciunt.
                                  publishedAt: Mollitia eos consequuntur tempore et.
                                  title: Explicabo impedit nesciunt quisquam aut eligendi repudiandae.
                                - ID: 7132541697137308667
                                  author: Dolor qui ut et quo est omnis.
                                  bookCover: Asperiores illo at nesciunt.
                                  publishedAt: Mollitia eos consequuntur tempore et.
                                  title: Explicabo impedit nesciunt quisquam aut eligendi repudiandae.
        post:
            tags:
                - books
            summary: create books
            operationId: books#create
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateRequestBody'
                        example:
                            ID: 8956346360473798852
                            author: Omnis molestiae sed.
                            bookCover: In optio dolor sed quo porro.
                            publishedAt: Natus magni laborum.
                            title: Sunt ut sint accusamus.
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateRequestBody'
                            example:
                                ID: 989268852422319511
                                author: Enim inventore voluptas et optio modi.
                                bookCover: Quisquam unde sed ut aperiam magni aut.
                                publishedAt: Quo ut rerum aliquid et.
                                title: In velit quaerat quaerat voluptatibus quod aspernatur.
    /books/{id}:
        delete:
            tags:
                - books
            summary: deleteBook books
            operationId: books#deleteBook
            parameters:
                - name: id
                  in: path
                  description: Book ID
                  required: true
                  schema:
                    type: integer
                    description: Book ID
                    example: 4883457536207780864
                    format: int64
                  example: 8481264023896229893
            responses:
                "204":
                    description: No Content response.
        get:
            tags:
                - books
            summary: getBook books
            operationId: books#getBook
            parameters:
                - name: id
                  in: path
                  description: Book ID
                  required: true
                  schema:
                    type: integer
                    description: Book ID
                    example: 318504118629116124
                    format: int64
                  example: 2227164442778910034
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateRequestBody'
                            example:
                                ID: 243241368298166066
                                author: Et perferendis consequuntur sint.
                                bookCover: Ut et quis consequatur sapiente.
                                publishedAt: Occaecati odit tenetur nemo.
                                title: Aut repellendus rerum quia fuga.
        put:
            tags:
                - books
            summary: updateBook books
            operationId: books#updateBook
            parameters:
                - name: id
                  in: path
                  description: Book ID
                  required: true
                  schema:
                    type: integer
                    description: Book ID
                    example: 5457708450979976253
                    format: int64
                  example: 4674411245031156630
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateBookRequestBody'
                        example:
                            book:
                                ID: 267326349154593595
                                author: Expedita commodi facere magni et.
                                bookCover: Est quibusdam rerum.
                                publishedAt: Dolor labore.
                                title: Quasi saepe sunt est dolor.
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateRequestBody'
                            example:
                                ID: 4151708405944197485
                                author: Repellendus itaque et.
                                bookCover: Rerum enim quibusdam qui qui hic quia.
                                publishedAt: In rem non.
                                title: Exercitationem quis harum eaque cum quia.
    /openapi3.json:
        get:
            tags:
                - books
            summary: Download ./gen/http/openapi3.json
            operationId: books#/openapi3.json
            responses:
                "200":
                    description: File downloaded
    /upload/{dir}:
        post:
            tags:
                - books
            summary: upload books
            operationId: books#upload
            parameters:
                - name: dir
                  in: path
                  description: Dir is the relative path to the file directory where the uploaded content is saved.
                  required: true
                  schema:
                    type: string
                    description: Dir is the relative path to the file directory where the uploaded content is saved.
                    default: upload
                    example: upload
                  example: upload
                - name: Content-Type
                  in: header
                  description: Content-Type header, must define value for multipart boundary.
                  allowEmptyValue: true
                  schema:
                    type: string
                    description: Content-Type header, must define value for multipart boundary.
                    default: multipart/form-data; boundary=goa
                    example: multipart/form-data; boundary=goa
                    pattern: multipart/[^;]+; boundary=.+
                  example: multipart/form-data; boundary=goa
            responses:
                "204":
                    description: No Content response.
                "400":
                    description: 'invalid_multipart_request: Error returned when the request body is not a valid multipart content.'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: 'internal_error: Fault while processing upload.'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
    /uploadBookCover:
        post:
            tags:
                - books
            summary: uploadImage books
            description: Upload an image
            operationId: books#uploadImage
            requestBody:
                required: true
                content:
                    multipart/form-data:
                        schema:
                            $ref: '#/components/schemas/UploadImageRequestBody'
                        example:
                            content_type: "multipart/\U000C737D鰒\U00029D3F; boundary=�����"
                            image:
                                - 69
                                - 116
                                - 32
                                - 115
                                - 105
                                - 110
                                - 116
                                - 32
                                - 99
                                - 111
                                - 110
                                - 115
                                - 101
                                - 113
                                - 117
                                - 117
                                - 110
                                - 116
                                - 117
                                - 114
                                - 32
                                - 117
                                - 116
                                - 32
                                - 97
                                - 108
                                - 105
                                - 97
                                - 115
                                - 32
                                - 101
                                - 111
                                - 115
                                - 46
            responses:
                "200":
                    description: OK response.
components:
    schemas:
        CreateRequestBody:
            type: object
            properties:
                ID:
                    type: integer
                    description: Unique ID of the book
                    example: 1864947210690557832
                    format: int64
                author:
                    type: string
                    description: Author of the book
                    example: Maiores unde et ducimus magnam nemo.
                bookCover:
                    type: string
                    description: Cover of the book
                    example: Aut officia iure.
                publishedAt:
                    type: string
                    description: Date the book has been published
                    example: Nemo tempora sed.
                title:
                    type: string
                    description: Title of the book
                    example: At quia doloremque a aut.
            example:
                ID: 3588849390797945004
                author: Animi doloremque occaecati natus quo facilis eum.
                bookCover: Iusto autem praesentium aperiam.
                publishedAt: Quis voluptas consequatur maiores ut ad dolor.
                title: Ad ipsum quia doloribus.
            required:
                - title
                - author
                - bookCover
                - publishedAt
        Error:
            type: object
            properties:
                fault:
                    type: boolean
                    description: Is the error a server-side fault?
                    example: false
                id:
                    type: string
                    description: ID is a unique identifier for this particular occurrence of the problem.
                    example: 123abc
                message:
                    type: string
                    description: Message is a human-readable explanation specific to this occurrence of the problem.
                    example: parameter 'p' must be an integer
                name:
                    type: string
                    description: Name is the name of this class of errors.
                    example: bad_request
                temporary:
                    type: boolean
                    description: Is the error temporary?
                    example: true
                timeout:
                    type: boolean
                    description: Is the error a timeout?
                    example: true
            description: Error returned when the Content-Type header does not define a multipart request.
            example:
                fault: true
                id: 123abc
                message: parameter 'p' must be an integer
                name: bad_request
                temporary: true
                timeout: false
            required:
                - name
                - id
                - message
                - temporary
                - timeout
                - fault
        UpdateBookRequestBody:
            type: object
            properties:
                book:
                    $ref: '#/components/schemas/CreateRequestBody'
            example:
                book:
                    ID: 267326349154593595
                    author: Expedita commodi facere magni et.
                    bookCover: Est quibusdam rerum.
                    publishedAt: Dolor labore.
                    title: Quasi saepe sunt est dolor.
        UploadImageRequestBody:
            type: object
            properties:
                content_type:
                    type: string
                    description: Content-Type header, must define value for multipart boundary.
                    default: multipart/form-data; boundary=goa
                    example: "multipart/\U000608D0\U00043717; boundary=������"
                    pattern: multipart/[^;]+; boundary=.+
                image:
                    type: string
                    description: Binary data of the image
                    example:
                        - 68
                        - 105
                        - 99
                        - 116
                        - 97
                        - 32
                        - 118
                        - 101
                        - 108
                        - 46
                    format: binary
            example:
                content_type: "multipart/\U000D7E36; boundary=�����"
                image:
                    - 79
                    - 102
                    - 102
                    - 105
                    - 99
                    - 105
                    - 105
                    - 115
                    - 32
                    - 105
                    - 112
                    - 115
                    - 97
                    - 109
                    - 46
tags:
    - name: books
      description: API for Books
