swagger: "2.0"
info:
    title: Books Service
    description: CRUD Application for books
    version: ""
host: localhost:8000
consumes:
    - application/json
    - application/xml
    - application/gob
produces:
    - application/json
    - application/xml
    - application/gob
paths:
    /books:
        get:
            tags:
                - books
            summary: all books
            operationId: books#all
            responses:
                "200":
                    description: OK response.
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/BookResponse'
            schemes:
                - http
        post:
            tags:
                - books
            summary: create books
            operationId: books#create
            parameters:
                - name: Content-Type
                  in: header
                  description: Cover of the book
                  required: false
                  type: string
                  default: multipart/form-data; boundary=goa
                  pattern: multipart/[^;]+; boundary=.+
                - name: CreateRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/BooksCreateRequestBody'
                    required:
                        - title
                        - author
                        - publishedAt
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/BooksCreateResponseBody'
                        required:
                            - title
                            - author
                            - bookCover
                            - publishedAt
            schemes:
                - http
    /books/{id}:
        get:
            tags:
                - books
            summary: getBook books
            operationId: books#getBook
            parameters:
                - name: id
                  in: path
                  description: Book ID
                  required: true
                  type: integer
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/BooksGetBookResponseBody'
                        required:
                            - title
                            - author
                            - bookCover
                            - publishedAt
            schemes:
                - http
        put:
            tags:
                - books
            summary: updateBook books
            operationId: books#updateBook
            parameters:
                - name: id
                  in: path
                  description: Book ID
                  required: true
                  type: integer
                - name: UpdateBookRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/BooksUpdateBookRequestBody'
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/BooksUpdateBookResponseBody'
                        required:
                            - title
                            - author
                            - bookCover
                            - publishedAt
            schemes:
                - http
        delete:
            tags:
                - books
            summary: deleteBook books
            operationId: books#deleteBook
            parameters:
                - name: id
                  in: path
                  description: Book ID
                  required: true
                  type: integer
            responses:
                "204":
                    description: No Content response.
            schemes:
                - http
    /openapi3.json:
        get:
            tags:
                - books
            summary: Download ./gen/http/openapi3.json
            operationId: books#/openapi3.json
            responses:
                "200":
                    description: File downloaded
                    schema:
                        type: file
            schemes:
                - http
definitions:
    BookRequestBody:
        title: BookRequestBody
        type: object
        properties:
            ID:
                type: integer
                description: id
                example: 3560148692509608818
                format: int64
            author:
                type: string
                description: Author of the book
                example: Assumenda recusandae corrupti.
            bookCover:
                type: string
                description: Cover of the book
                default: multipart/form-data; boundary=goa
                example: multipart/form-data; boundary=goa
                pattern: multipart/[^;]+; boundary=.+
            publishedAt:
                type: string
                description: Date the book has been published
                example: Doloribus similique possimus quia.
            title:
                type: string
                description: Title of the book
                example: Vitae a amet distinctio reprehenderit ea inventore.
        example:
            ID: 933868219178393708
            author: Voluptatem voluptatem ut ex et quasi.
            bookCover: multipart/form-data; boundary=goa
            publishedAt: Qui et deleniti fugit est aut.
            title: Eos facere placeat veniam voluptas accusamus ut.
        required:
            - title
            - author
            - bookCover
            - publishedAt
    BookResponse:
        title: BookResponse
        type: object
        properties:
            ID:
                type: integer
                description: id
                example: 194060346287194780
                format: int64
            author:
                type: string
                description: Author of the book
                example: In molestiae.
            bookCover:
                type: string
                description: Cover of the book
                default: multipart/form-data; boundary=goa
                example: multipart/form-data; boundary=goa
                pattern: multipart/[^;]+; boundary=.+
            publishedAt:
                type: string
                description: Date the book has been published
                example: Nostrum et amet dolores.
            title:
                type: string
                description: Title of the book
                example: Eveniet autem aliquam.
        example:
            ID: 6610887825911302372
            author: Eum dolorum labore quas quidem sit.
            bookCover: multipart/form-data; boundary=goa
            publishedAt: Rerum illum vel qui totam incidunt aut.
            title: Dolorem omnis voluptate quo veritatis doloribus nesciunt.
        required:
            - title
            - author
            - bookCover
            - publishedAt
    BooksCreateRequestBody:
        title: BooksCreateRequestBody
        type: object
        properties:
            ID:
                type: integer
                description: id
                example: 2442824487835556863
                format: int64
            author:
                type: string
                description: Author of the book
                example: Amet iste saepe.
            publishedAt:
                type: string
                description: Date the book has been published
                example: Est temporibus voluptatibus occaecati sint.
            title:
                type: string
                description: Title of the book
                example: Aut occaecati odit tenetur.
        example:
            ID: 3409556471438418296
            author: Sint consequuntur.
            publishedAt: Alias eos magnam qui quibusdam quas velit.
            title: Sed placeat perferendis quia.
        required:
            - title
            - author
            - publishedAt
    BooksCreateResponseBody:
        title: BooksCreateResponseBody
        type: object
        properties:
            ID:
                type: integer
                description: id
                example: 519258200057068739
                format: int64
            author:
                type: string
                description: Author of the book
                example: Rerum enim quibusdam qui qui hic quia.
            bookCover:
                type: string
                description: Cover of the book
                default: multipart/form-data; boundary=goa
                example: multipart/form-data; boundary=goa
                pattern: multipart/[^;]+; boundary=.+
            publishedAt:
                type: string
                description: Date the book has been published
                example: In rem non.
            title:
                type: string
                description: Title of the book
                example: Quia eos repellendus itaque et.
        example:
            ID: 3967982326301678799
            author: Repellendus rerum quia fuga eum.
            bookCover: multipart/form-data; boundary=goa
            publishedAt: Perferendis consequuntur sint ut ut et quis.
            title: Sapiente nesciunt.
        required:
            - title
            - author
            - bookCover
            - publishedAt
    BooksGetBookResponseBody:
        title: BooksGetBookResponseBody
        type: object
        properties:
            ID:
                type: integer
                description: id
                example: 4353567075589141598
                format: int64
            author:
                type: string
                description: Author of the book
                example: Consequatur quia consequatur et sed aut doloribus.
            bookCover:
                type: string
                description: Cover of the book
                default: multipart/form-data; boundary=goa
                example: multipart/form-data; boundary=goa
                pattern: multipart/[^;]+; boundary=.+
            publishedAt:
                type: string
                description: Date the book has been published
                example: Accusantium quo.
            title:
                type: string
                description: Title of the book
                example: Enim odio voluptatum.
        example:
            ID: 2049725647592791687
            author: Fugit aut non quas et quos.
            bookCover: multipart/form-data; boundary=goa
            publishedAt: Delectus voluptatem tenetur eveniet earum.
            title: Sapiente numquam consequatur fuga voluptatibus alias.
        required:
            - title
            - author
            - bookCover
            - publishedAt
    BooksUpdateBookRequestBody:
        title: BooksUpdateBookRequestBody
        type: object
        properties:
            book:
                $ref: '#/definitions/BookRequestBody'
        example:
            book:
                ID: 3012804354026031466
                author: Aut eligendi repudiandae repellat.
                bookCover: multipart/form-data; boundary=goa
                publishedAt: Qui ut et quo est omnis dolor.
                title: Mollitia assumenda explicabo impedit nesciunt.
    BooksUpdateBookResponseBody:
        title: BooksUpdateBookResponseBody
        type: object
        properties:
            ID:
                type: integer
                description: id
                example: 461540920661239280
                format: int64
            author:
                type: string
                description: Author of the book
                example: Temporibus possimus natus tempore amet provident velit.
            bookCover:
                type: string
                description: Cover of the book
                default: multipart/form-data; boundary=goa
                example: multipart/form-data; boundary=goa
                pattern: multipart/[^;]+; boundary=.+
            publishedAt:
                type: string
                description: Date the book has been published
                example: Et et qui voluptatibus.
            title:
                type: string
                description: Title of the book
                example: Error ratione delectus.
        example:
            ID: 3193937602553499790
            author: Dolorem et.
            bookCover: multipart/form-data; boundary=goa
            publishedAt: Sunt a quae quo autem debitis exercitationem.
            title: Quasi in nemo.
        required:
            - title
            - author
            - bookCover
            - publishedAt
